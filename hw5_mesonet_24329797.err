2025-04-11 20:53:18.085524: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:10575] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2025-04-11 20:53:18.085587: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:479] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2025-04-11 20:53:18.104493: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1442] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-04-11 20:53:18.117891: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-04-11 20:53:33.617255: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1928] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 46673 MB memory:  -> device: 0, name: NVIDIA RTX 6000 Ada Generation, pci bus id: 0000:0a:00.0, compute capability: 8.9
2025-04-11 20:53:49.615739: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2025-04-11 20:53:49.671387: I external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:465] Loaded cuDNN version 8907
/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tf_keras/src/engine/training.py:3098: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native TF-Keras format, e.g. `model.save('my_model.keras')`.
  saving_api.save_model(
Traceback (most recent call last):
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 689, in <module>
    main()
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 686, in main
    run_single_rotation(args)
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 528, in run_single_rotation
    mean_pred = predicted_distribution.mean().numpy().flatten()
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/distributions/distribution.py", line 1536, in mean
    return self._mean(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/layers/internal/distribution_tensor_coercible.py", line 135, in _mean
    return self.tensor_distribution._mean(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/distributions/transformed_distribution.py", line 481, in _mean
    return self._mean_mode_impl('mean', kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/distributions/transformed_distribution.py", line 485, in _mean_mode_impl
    raise NotImplementedError(
NotImplementedError: `mean` is not implemented for non-affine `bijectors`.
