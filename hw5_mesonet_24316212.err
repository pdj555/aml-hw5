2025-04-10 23:14:46.608691: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:10575] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2025-04-10 23:14:46.608741: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:479] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2025-04-10 23:14:46.629179: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1442] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-04-10 23:14:46.642819: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI AVX512_BF16 AVX512_FP16 AVX_VNNI AMX_TILE AMX_INT8 AMX_BF16 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-04-10 23:15:12.801982: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:268] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
Traceback (most recent call last):
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 738, in <module>
    main()
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 719, in main
    all_models, all_histories, all_rotation_data, mad_results, figures = run_experiments(
                                                                         ^^^^^^^^^^^^^^^^
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 651, in run_experiments
    percentiles = calculate_percentiles(model_outer, ins_test)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/cs504313/aml/aml-hw5/mesonet_precipitation.py", line 249, in calculate_percentiles
    results['mean'] = distributions.mean().numpy().flatten()
                      ^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/distributions/distribution.py", line 1536, in mean
    return self._mean(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/layers/internal/distribution_tensor_coercible.py", line 135, in _mean
    return self.tensor_distribution._mean(**kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/distributions/transformed_distribution.py", line 481, in _mean
    return self._mean_mode_impl('mean', kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/fagg/miniconda3/envs/dnn/lib/python3.12/site-packages/tensorflow_probability/python/distributions/transformed_distribution.py", line 485, in _mean_mode_impl
    raise NotImplementedError(
NotImplementedError: `mean` is not implemented for non-affine `bijectors`.
